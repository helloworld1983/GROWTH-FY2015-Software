
CFITSIO_SRC = cfitsio3370.tar.gz
INSTALL_PREFIX = $(HOME)/work/install/bin

#============================================
all: \
	growth_fy2015_adc_measure_exposure \
	test_readADC 

install: all
	@if [ ! -f $(INSTALL_PREFIX)/bin ]; then mkdir -p $(INSTALL_PREFIX)/bin; fi
	cp growth_fy2015_adc_measure_exposure $(INSTALL_PREFIX)/bin
	cp test_readADC $(INSTALL_PREFIX)/bin

CXX=g++-4.8 -std=c++11

ifdef USE_ROOT
ROOT_LIBS = $(shell root-config --glibs)
ROOT_CFLAGS = $(shell root-config --cflags)
endif

CXXFLAGS = -I. -I../include -I./yaml-cpp/include -I$(HOME)/work/install/include -Icfitsio/include
LDFLAGS = -lpthread -lboost_system -lboost_thread-mt -lxerces-c yaml-cpp/build/lib/libyaml-cpp.a -Lcfitsio/lib -lcfitsio

CXXFLAGS_PI = -lwiringPi -I../include/wiringPi -DRASPBERRY_PI

CXXFLAGS =  -std=c++11 $(CXXFLAGS_PI) -I. -I../include -I./yaml-cpp/include -I$(HOME)/work/install/include -Icfitsio/include -O3
LDFLAGS = -lboost_system -lboost_thread-mt -lxerces-c yaml-cpp/build/lib/libyaml-cpp.a -Lcfitsio/lib -lcfitsio -L$(HOME)/work/install/lib -lpthread

#---------------------------------------------
# Raspberry Pi applications
#---------------------------------------------
test_readADC: test_readADC.cc
	$(CXX) $(CXXFLAGS) $^ -o $@

test_setDAC: test_setDAC.cc
	$(CXX) $(CXXFLAGS) $^ -o $@
	
test_serial: test_serial.cc
	$(CXX) $(CXXFLAGS) $(LDFLAGS) $^ -o $@

#---------------------------------------------
# Generic applications
#---------------------------------------------
test_serial_ssdtp: test_serial_ssdtp.cc
	$(CXX)  $^ -I../include -lboost_system -lboost_thread-mt -o $@
	
test_serial_receive: test_serial_receive.cc
	$(CXX)  $^ -I../include -lboost_system -lboost_thread-mt -o $@

test_rmap_to_fpga: test_rmap_to_fpga.cc
	$(CXX) -g  $^ -I../include -lboost_system -lboost_thread-mt -o $@ -lxerces-c
	
#---------------------------------------------
# Mac applictions
#---------------------------------------------
test_growth_fy2015_adc_cpuTrigger: test_growth_fy2015_adc_cpuTrigger.cc GROWTH_FY2015_ADC.hh
	$(CXX) -g  test_growth_fy2015_adc_cpuTrigger.cc $(CXXFLAGS) $(LDFLAGS) $(ROOT_LIBS) $(ROOT_CFLAGS) -o $@

test_growth_fy2015_adc_loadConfigurationFile: test_growth_fy2015_adc_loadConfigurationFile.cc GROWTH_FY2015_ADC.hh
	$(CXX) -g  test_growth_fy2015_adc_loadConfigurationFile.cc $(CXXFLAGS) $(LDFLAGS) $(ROOT_LIBS) $(ROOT_CFLAGS) -o $@
test_rmaphandler: test_rmaphandler.cc
	$(CXX) -g  $^ $(CXXFLAGS) $(LDFLAGS) $(ROOT_LIBS) $(ROOT_CFLAGS) -o $@ 
	
growth_fy2015_adc_measure_exposure: main_growth_fy2015_adc_measure_exposure.cc  GROWTH_FY2015_ADC.hh
	$(CXX) -g  main_growth_fy2015_adc_measure_exposure.cc $(CXXFLAGS) $(LDFLAGS) $(ROOT_LIBS) $(ROOT_CFLAGS) -o $@
	
#============================================
# External libraries
#============================================
prepare_external_libs: build_yaml_cpp build_cfitsio
	
clean_external_libs:
	rm -rf cfitsio yaml-cpp
	
#============================================
# yaml-cpp
#============================================
get_yaml_cpp:
	bash -c "if [ ! -d yaml-cpp ]; then git clone https://github.com/jbeder/yaml-cpp; fi"
yaml_cpp: get_yaml_cpp
build_yaml_cpp: yaml_cpp
	cd yaml-cpp; bash -c "if [ ! -d build ]; then mkdir build; fi"; \
	cd build; cmake .. -DCMAKE_INSTALL_PREFIX=`pwd` > log_cmake; \
	make -j4 > log_make; make install > log_make_install

#============================================
# cfitsio
#============================================
get_cfitsio:
	curl -O "ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/$(CFITSIO_SRC)"
	tar zxf $(CFITSIO_SRC)
cfitsio: get_cfitsio
build_cfitsio: cfitsio
	cd cfitsio; ./configure --prefix=`pwd` > log_configure; make -j4 > log_make; make install > log_make_install
